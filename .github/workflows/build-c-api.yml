name: Build c-api
on:
  push:
    paths:
      - "c-api/*"
      - "runtime/src/capi/*"

  workflow_dispatch:

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019]
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    #env:
    #  working-directory: ./c-api
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
      
      - name: Build windows
        if: matrix.os == 'windows-2019'
        working-directory: ./c-api
        run: |
          ./build.bat
          copy build/out/capi.h lib/capi.h

      - name: Build linux
        if: matrix.os == 'ubuntu-20.04'
        working-directory: ./c-api
        run: | 
          ./build.sh
          cp build/out/capi.h lib/capi.h

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Upload windows artifacts
        if: matrix.os == 'windows-2019'
        uses: actions/upload-artifact@v2
        with:
          name: go-module-capi-windows
          path: ./c-api/lib/win32/

      - name: Upload ubuntu artifacts
        if: matrix.os == 'ubuntu-20.04'
        uses: actions/upload-artifact@v2
        with:
          name: go-module-capi-linux
          path: | 
            ./c-api/lib/
            !./c-api/lib/win32/

  commit:
    name: Commit & Push libs
    runs-on: ubuntu-20.04
    needs: [build-windows-2019, build-ubuntu-20.04]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Download windows artifacts
        uses: actions/download-artifact@v2
        with:
          name: go-module-capi-windows
          path: c-api/lib/win32/

      - name: Download linux artifacts
        uses: actions/download-artifact@v2
        with:
          name: go-module-capi-linux
          path: c-api/lib/

      - name: Commit & Push static libs
        uses: actions-js/push@v1.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: "chore: update c-api libs"
          branch: ${{ steps.extract_branch.outputs.branch }}

  delete-artifacts:
    name: Delete artifacts
    runs-on: ubuntu-18.04
    needs: [ create-release ]
    if: ${{ always() }}
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            go-module-capi-windows
            go-module-capi-linux